{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Bootcamp\\\\dynamic-tab-component-main\\\\src\\\\Closable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tab, Grid, Button } from '@mui/material';\nimport { TabList, TabContext, TabPanel } from '@mui/lab';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Closable() {\n  _s();\n  const [selectedTab, setSelectedTab] = useState(\"Main\");\n  const [tabs, setTabs] = useState([]);\n  const [panels, setPanels] = useState([]);\n  const [tabIndex, setTabIndex] = useState(2);\n  const handleChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n  const handleTabOptions = value => {\n    setSelectedTab(value);\n    setTabIndex(tabIndex + 1);\n  };\n  const createBlueBox = () => {\n    const value = `Blue Box ${tabIndex}`;\n    const newTab = {\n      value: value,\n      child: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px',\n          width: '300px',\n          backgroundColor: 'blue'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 26\n      }, this)\n    };\n    setTabs([...tabs, newTab]);\n\n    // setPanels([\n    //     ...panels,\n    //     {\n    //         value: value,\n    //         child: () => <div style={{height: '300px', width: '300px', backgroundColor: 'blue'}} />\n    //     }\n    // ])\n\n    handleTabOptions(value);\n  };\n  const createRedBox = () => {\n    const value = `Red Box ${tabIndex}`;\n    const newTab = {\n      value: value,\n      child: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px',\n          width: '300px',\n          backgroundColor: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this)\n    };\n    setTabs([...tabs, newTab]);\n\n    // setPanels([\n    //     ...panels,\n    //     {\n    //         value: value,\n    //         child: () => <div style={{height: '300px', width: '300px', backgroundColor: 'red'}} />\n    //     }\n    // ])\n\n    handleTabOptions(value);\n  };\n  const handleTabClose = (event, value) => {\n    tabs.map(e => console.log(e.value));\n    const tabArr = tabs.filter(x => x.value !== value);\n    console.log(tabArr);\n    setTabs(tabArr);\n\n    // const panelArr = panels.filter(p => p.value !== value)\n    // setPanels(panelArr);\n\n    setSelectedTab('Main');\n  };\n  return /*#__PURE__*/_jsxDEV(TabContext, {\n    value: selectedTab,\n    children: [/*#__PURE__*/_jsxDEV(TabList, {\n      onChange: handleChange,\n      \"aria-label\": \"lab API tabs example\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"new Closable Tab\",\n        value: \"Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n        icon: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: e => handleTabClose(e, tab.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this),\n        iconPosition: \"end\",\n        label: tab.value,\n        value: tab.value\n      }, tab.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: createBlueBox,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Create Blue Box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: createRedBox,\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Create Red Box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), tabs.map(panel => /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: panel.value,\n      children: panel.child()\n    }, panel.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(Closable, \"PGslJdLI4Xggcl/GfdGs7meeEZE=\");\n_c = Closable;\nvar _c;\n$RefreshReg$(_c, \"Closable\");","map":{"version":3,"names":["React","useState","Tab","Grid","Button","TabList","TabContext","TabPanel","CloseIcon","jsxDEV","_jsxDEV","Closable","_s","selectedTab","setSelectedTab","tabs","setTabs","panels","setPanels","tabIndex","setTabIndex","handleChange","event","newValue","handleTabOptions","value","createBlueBox","newTab","child","style","height","width","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","createRedBox","handleTabClose","map","e","console","log","tabArr","filter","x","children","onChange","label","tab","icon","onClick","iconPosition","container","spacing","item","xs","md","variant","color","panel","_c","$RefreshReg$"],"sources":["E:/Projects/Bootcamp/dynamic-tab-component-main/src/Closable.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {\n    Tab, Grid, Button\n} from '@mui/material';\nimport {\n    TabList,\n    TabContext, TabPanel\n} from '@mui/lab';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function Closable() {\n    const [selectedTab, setSelectedTab] = useState(\"Main\");\n\n    const [tabs, setTabs] = useState([])\n    const [panels, setPanels] = useState([])\n    const [tabIndex, setTabIndex] = useState(2)\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n\n    const handleTabOptions = (value) => {\n        setSelectedTab(value)\n        setTabIndex(tabIndex + 1)\n    }\n\n    const createBlueBox = () => {\n        const value = `Blue Box ${tabIndex}`\n        const newTab = {\n            value: value,\n            child: () => <div style={{height: '300px', width: '300px', backgroundColor: 'blue'}} />\n        }\n\n        setTabs([...tabs, newTab])\n\n        // setPanels([\n        //     ...panels,\n        //     {\n        //         value: value,\n        //         child: () => <div style={{height: '300px', width: '300px', backgroundColor: 'blue'}} />\n        //     }\n        // ])\n\n        handleTabOptions(value);\n    }\n\n\n    const createRedBox = () => {\n        const value = `Red Box ${tabIndex}`\n        const newTab = {\n            value: value,\n            child: () => <div style={{height: '300px', width: '300px', backgroundColor: 'red'}} />\n        }\n\n        setTabs([...tabs, newTab])\n\n        // setPanels([\n        //     ...panels,\n        //     {\n        //         value: value,\n        //         child: () => <div style={{height: '300px', width: '300px', backgroundColor: 'red'}} />\n        //     }\n        // ])\n\n        handleTabOptions(value);\n    }\n\n\n    const handleTabClose = (event, value) => {\n        tabs.map(e => console.log(e.value))\n        const tabArr = tabs.filter(x => x.value !== value)\n        console.log(tabArr)\n        setTabs(tabArr)\n\n        // const panelArr = panels.filter(p => p.value !== value)\n        // setPanels(panelArr);\n\n        setSelectedTab('Main')\n    }\n\n    return (\n        <TabContext value={selectedTab}>\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n                <Tab label=\"new Closable Tab\" value=\"Main\" />\n\n                {tabs.map(tab => (\n                    <Tab \n                        icon={\n                            <CloseIcon onClick={(e) => handleTabClose(e, tab.value)} />\n                        } iconPosition='end'\n                        key={tab.value} label={tab.value} \n                        value={tab.value} \n                    />\n                ))}\n            </TabList>\n\n\n\n\n\n\n            <TabPanel value=\"Main\">\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                        <Button \n                            onClick={createBlueBox}\n                            variant='contained' color='primary'>\n                            Create Blue Box\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Button \n                            onClick={createRedBox}\n                            variant='contained' color='secondary'>\n                            Create Red Box\n                        </Button>\n                    </Grid>\n                </Grid>\n            </TabPanel>\n\n            {tabs.map(panel => (\n                <TabPanel key={panel.value} value={panel.value}>\n                    {panel.child()}\n                </TabPanel>\n            ))}\n        </TabContext>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}